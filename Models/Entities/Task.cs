using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using CompTask_Web.Models.Identity;

namespace CompTask_Web.Models.Entities
{
    public class Task
    {
        [Key]
        public int Id { get; set; }


        [Required(ErrorMessage ="O titulo √© obrigat√≥rio")]
        [StringLength(100, ErrorMessage ="O titulo deve ter no m√°ximo 100 caracteres")]
        public string Title { get; set; }


        [StringLength(500, ErrorMessage = "A descri√ß√£o deve ter no m√°ximo 500 caracteres")]
        public string Description { get; set; }


        [Required(ErrorMessage ="A data de vencimento √© obrigat√≥ria")]
        [Display(Name = "Prazo")]
        public DateTime DueDate { get; set; } = DateTime.Now.AddDays(1); // data de vencimento


        [Required(ErrorMessage = "A prioridade √© obrigatoria")]
        [Display(Name ="Prioridade")]
        public Priority TaskPriority { get; set; } = Priority.Medium;


        [Display(Name = "Status")]
        public Status IsCompleted { get; set; } // RELACIONAMENTO COM DATA? PARA VENCIMENTO?
        
        //RELACIONAMENTO COM USU√ÅRIO:
        [ForeignKey("User")]
        public string UserId { get; set; }
        public ApplicationUser User { get; set; }

    }

    public enum Priority
    {
        [Display(Name = "Baixa")]
        Low,

        [Display(Name = "M√©dia")]
        Medium,

        [Display(Name = "Alta")]
        High

    }

    public enum Status{ // depois pensar em l√≥gica para rela√ß√£o de vencimento e data, no DB ou l√≥gica?
        [Display(Name ="üü† Pendente")]
        Pending,

        [Display(Name ="üü¢ Conclu√≠da")]
        Completed,

        [Display(Name ="üî¥ Atrasada")]
        Overdue

    }
}